mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {
  customerAccessTokenCreate(input: $input) {
    userErrors {
      field
      message
    }
    customerAccessToken {
      accessToken
      expiresAt
    }
    customerUserErrors {
      field
      message
    }
  }
}

fragment lineItemProperties on CheckoutLineItem {
  id
  title
  quantity
  discountAllocations {
    allocatedAmount {
      amount
      currencyCode
    }
    discountApplication {
      allocationMethod
      targetSelection
      targetType
    }
  }
  variant {
    id
    product{
      handle
    }
    image {
      id
      altText
      originalSrc
      transformedSrc(maxHeight: 200, maxWidth: 200)
    }
    title
    price
    compareAtPrice
    availableForSale
  }
}

fragment checkoutState on Checkout {
  id
  webUrl
  subtotalPrice
  totalPrice
  order {
    id
    orderNumber
  }
  discountApplications(first:100) {
    edges {
      node {
        ... on AutomaticDiscountApplication {
          title
        }
        ... on ManualDiscountApplication {
          title
        }
        ... on ScriptDiscountApplication {
          title
        }
        ... on DiscountCodeApplication {
          applicable
          code
        }
        allocationMethod
        targetSelection
        targetType
        value {
          ... on MoneyV2 {
            amount
            currencyCode
          }
          ... on PricingPercentageValue {
            percentage
          }
        }
      }
    }
  }
  lineItems(first: 100) {
    edges {
      node {
        ...lineItemProperties
      }
    }
  }
}

mutation checkoutCreate($input: CheckoutCreateInput!) {
  checkoutCreate(input: $input) {
    userErrors {
      field
      message
    }
    checkout {
      ...checkoutState
    }
    checkoutUserErrors {
      field
      message
    }
  }
}

mutation checkoutLineItemsAdd(
  $lineItems: [CheckoutLineItemInput!]!
  $checkoutId: ID!
) {
  checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {
    checkout {
      ...checkoutState
    }
  }
}

mutation checkoutLineItemsReplace(
  $lineItems: [CheckoutLineItemInput!]!
  $checkoutId: ID!
) {
  checkoutLineItemsReplace(lineItems: $lineItems, checkoutId: $checkoutId) {
    checkout {
      ...checkoutState
    }
  }
}

query getCheckout($input: ID!) {
  node(id: $input) {
    id
    ... on Checkout {
      ...checkoutState
    }
  }
}

mutation checkoutCustomerAssociateV2(
  $checkoutId: ID!
  $customerAccessToken: String!
) {
  checkoutCustomerAssociateV2(
    checkoutId: $checkoutId
    customerAccessToken: $customerAccessToken
  ) {
    userErrors {
      field
      message
    }
    checkout {
      id
    }
    customer {
      id
    }
  }
}

mutation checkoutDiscountCodeApplyV2($discountCode: String!, $checkoutId: ID!) {
  checkoutDiscountCodeApplyV2(
    discountCode: $discountCode
    checkoutId: $checkoutId
  ) {
    userErrors {
      field
      message
    }
    checkout {
      ...checkoutState
    }
  }
}

mutation checkoutDiscountCodeRemove($checkoutId: ID!) {
  checkoutDiscountCodeRemove(checkoutId: $checkoutId) {
    userErrors {
      field
      message
    }
    checkout {
      ...checkoutState
    }
  }
}
