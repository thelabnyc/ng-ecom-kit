mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {
  customerAccessTokenCreate(input: $input) {
    userErrors {
      field
      message
    }
    customerAccessToken {
      accessToken
      expiresAt
    }
    customerUserErrors {
      field
      message
    }
  }
}

fragment fullDiscountAllocation on CartDiscountAllocation {
  ... on CartAutomaticDiscountAllocation {
    title
  }
  ... on CartCodeDiscountAllocation {
    code
  }
  discountedAmount {
    amount
    currencyCode
  }
}

fragment lineItemProperties on CartLine {
  id
  quantity
  discountAllocations {
    ...fullDiscountAllocation
  }
  merchandise {
    ... on ProductVariant {
      id
      image {
        id
        altText
        originalSrc
        transformedSrc(maxHeight: 200, maxWidth: 200)
      }
      title
      price
      compareAtPrice
      availableForSale
      product {
        id
        title
        handle
      }
    }
  }
}

fragment checkoutState on Cart {
  id
  checkoutUrl
  estimatedCost {
    subtotalAmount {
      amount
      currencyCode
    }
    totalAmount {
      amount
      currencyCode
    }
    totalDutyAmount {
      amount
      currencyCode
    }
    totalTaxAmount {
      amount
      currencyCode
    }
  }
  discountCodes {
    applicable
    code
  }
  lines(first: 100) {
    edges {
      node {
        ...lineItemProperties
      }
    }
  }
}

mutation checkoutCreate($input: CartInput!) {
  cartCreate(input: $input) {
    userErrors {
      field
      message
    }
    cart {
      ...checkoutState
    }
  }
}

mutation checkoutLineItemsAdd($lineItems: [CartLineInput!]!, $cartId: ID!) {
  cartLinesAdd(lines: $lineItems, cartId: $cartId) {
    cart {
      ...checkoutState
    }
    userErrors {
      field
      message
    }
  }
}

mutation cartLinesRemove($cartId: ID!, $lineIds: [ID!]!) {
  cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {
    cart {
      ...checkoutState
    }
    userErrors {
      field
      message
    }
  }
}

mutation cartLinesUpdate($cartId: ID!, $lines: [CartLineUpdateInput!]!) {
  cartLinesUpdate(cartId: $cartId, lines: $lines) {
    cart {
      ...checkoutState
    }
    userErrors {
      field
      message
    }
  }
}

query getCheckout($input: ID!) {
  node(id: $input) {
    id
    ... on Cart {
      ...checkoutState
    }
  }
}

mutation checkoutCustomerAssociateV2(
  $checkoutId: ID!
  $customerAccessToken: String!
) {
  cartBuyerIdentityUpdate(
    cartId: $checkoutId
    buyerIdentity: { customerAccessToken: $customerAccessToken }
  ) {
    userErrors {
      field
      message
    }
    cart {
      id
      buyerIdentity {
        customer {
          id
        }
      }
    }
  }
}

mutation checkoutDiscountCodeApplyV2($discountCode: String!, $checkoutId: ID!) {
  cartDiscountCodesUpdate(cartId: $checkoutId, discountCodes: [$discountCode]) {
    userErrors {
      field
      message
    }
    cart {
      ...checkoutState
    }
  }
}

mutation checkoutDiscountCodeRemove($checkoutId: ID!) {
  cartDiscountCodesUpdate(cartId: $checkoutId, discountCodes: []) {
    userErrors {
      field
      message
    }
    cart {
      ...checkoutState
    }
  }
}
